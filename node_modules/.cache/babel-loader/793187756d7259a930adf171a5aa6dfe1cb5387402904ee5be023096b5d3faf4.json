{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zccz2\\\\OneDrive\\\\Desktop\\\\ui\\\\ui\\\\src\\\\VideoPlayer2.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Css/VideoPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = seconds => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n};\nconst VideoPlayer2 = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [quality, setQuality] = useState(\"720\");\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [isMuted, setIsMuted] = useState(false);\n  const [lastVolume, setLastVolume] = useState(1);\n\n  // Play / Pause toggle\n  const togglePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    if (video.paused) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  };\n\n  // Volume change\n  const handleVolumeChange = e => {\n    const vol = parseFloat(e.target.value);\n    setVolume(vol);\n    videoRef.current.volume = vol;\n    setIsMuted(vol === 0);\n  };\n\n  // Mute toggle\n  const toggleMute = () => {\n    const video = videoRef.current;\n    if (video.muted || volume === 0) {\n      // Unmute\n      setVolume(lastVolume);\n      video.volume = lastVolume;\n      video.muted = false;\n      setIsMuted(false);\n    } else {\n      // Mute\n      setLastVolume(volume);\n      setVolume(0);\n      video.volume = 0;\n      video.muted = true;\n      setIsMuted(true);\n    }\n  };\n\n  // Quality change\n  const handleQualityChange = async e => {\n    const newQuality = e.target.value;\n    const video = videoRef.current;\n    const wasPaused = video.paused;\n    const current = video.currentTime;\n    const goingLower = parseInt(newQuality) < parseInt(prevQuality);\n    setIsTransitioning(true);\n    setPrevQuality(newQuality);\n    setQuality(newQuality);\n    setIsPlaying(false);\n    if (goingLower) {\n      video.classList.add(\"blurred\");\n    } else {\n      video.classList.remove(\"blurred\");\n    }\n    setQuality(newQuality);\n    setIsPlaying(false);\n    video.src = `/videos/SampleVideo-${newQuality}p.mp4`;\n    video.load();\n    video.currentTime = current;\n    try {\n      if (!wasPaused) {\n        await video.play();\n        setIsPlaying(true);\n      }\n    } catch (error) {\n      console.error(\"Autoplay failed after quality switch:\", error);\n    }\n    setTimeout(() => {\n      video.classList.remove(\"blurred\"); // Remove blur after 1s\n      setIsTransitioning(false);\n    }, 1000);\n  };\n\n  // Seek bar change\n  const handleSeek = e => {\n    const time = parseFloat(e.target.value);\n    videoRef.current.currentTime = time;\n    setCurrentTime(time);\n  };\n\n  // Fullscreen\n  const handleFullscreen = () => {\n    const video = videoRef.current;\n    if (video.requestFullscreen) {\n      video.requestFullscreen();\n    } else if (video.webkitRequestFullscreen) {\n      video.webkitRequestFullscreen();\n    } else if (video.msRequestFullscreen) {\n      video.msRequestFullscreen();\n    }\n  };\n  useEffect(() => {\n    const video = videoRef.current;\n    const updateTime = () => {\n      setCurrentTime(video.currentTime);\n    };\n    const setVideoData = () => {\n      setDuration(video.duration);\n      setCurrentTime(video.currentTime);\n    };\n    const onPlay = () => setIsPlaying(true);\n    const onPause = () => setIsPlaying(false);\n    video.addEventListener(\"loadedmetadata\", setVideoData);\n    video.addEventListener(\"timeupdate\", updateTime);\n    video.addEventListener(\"play\", onPlay);\n    video.addEventListener(\"pause\", onPause);\n    return () => {\n      video.removeEventListener(\"loadedmetadata\", setVideoData);\n      video.removeEventListener(\"timeupdate\", updateTime);\n      video.removeEventListener(\"play\", onPlay);\n      video.removeEventListener(\"pause\", onPause);\n    };\n  }, []);\n  useEffect(() => {\n    const seekBar = document.querySelector('.seek-bar-container input[type=\"range\"]');\n    const percentage = currentTime / duration * 100;\n    if (seekBar) {\n      seekBar.style.setProperty('--seek-before-width', `${percentage}%`);\n    }\n  }, [currentTime, duration]);\n  useEffect(() => {\n    const volumeSlider = document.querySelector('.volume-slider');\n    if (volumeSlider) {\n      const percent = volume * 100;\n      volumeSlider.style.background = `linear-gradient(to right, #2196F3 ${percent}%, #ccc ${percent}%)`;\n    }\n  }, [volume]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yt-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"yt-video\",\n      src: `/videos/SampleVideo-${quality}p.mp4`,\n      onClick: togglePlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yt-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seek-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: duration,\n          step: \"0.1\",\n          value: currentTime,\n          onChange: handleSeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          children: isPlaying ? \"‚ùö‚ùö\" : \"‚ñ∂\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time-display\",\n          children: [formatTime(currentTime), \" / \", formatTime(duration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: isMuted ? \"üîá\" : \"üîä\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"volume-slider\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: quality,\n          onChange: handleQualityChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"320\",\n            children: \"320p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"480\",\n            children: \"480p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"720\",\n            children: \"720p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1080\",\n            children: \"1080p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFullscreen,\n          children: \"\\u26F6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 3\n  }, this);\n};\n_s(VideoPlayer2, \"xrqMcaTbIwZTaRnBBfa3A2Tx6bk=\");\n_c = VideoPlayer2;\nexport default VideoPlayer2;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer2\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","formatTime","seconds","mins","Math","floor","secs","VideoPlayer2","_s","videoRef","isPlaying","setIsPlaying","volume","setVolume","quality","setQuality","currentTime","setCurrentTime","duration","setDuration","isMuted","setIsMuted","lastVolume","setLastVolume","togglePlay","video","current","paused","play","pause","handleVolumeChange","e","vol","parseFloat","target","value","toggleMute","muted","handleQualityChange","newQuality","wasPaused","goingLower","parseInt","prevQuality","setIsTransitioning","setPrevQuality","classList","add","remove","src","load","error","console","setTimeout","handleSeek","time","handleFullscreen","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","updateTime","setVideoData","onPlay","onPause","addEventListener","removeEventListener","seekBar","document","querySelector","percentage","style","setProperty","volumeSlider","percent","background","className","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["C:/Users/zccz2/OneDrive/Desktop/ui/ui/src/VideoPlayer2.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Css/VideoPlayer.css\";\r\n\r\nconst formatTime = (seconds) => {\r\n  const mins = Math.floor(seconds / 60);\r\n  const secs = Math.floor(seconds % 60);\r\n  return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n};\r\n\r\nconst VideoPlayer2 = () => {\r\n  const videoRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const [quality, setQuality] = useState(\"720\");\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [lastVolume, setLastVolume] = useState(1);\r\n  \r\n\r\n  // Play / Pause toggle\r\n  const togglePlay = () => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n    if (video.paused) {\r\n      video.play();\r\n    } else {\r\n      video.pause();\r\n    }\r\n  };\r\n\r\n  // Volume change\r\n  const handleVolumeChange = (e) => {\r\n    const vol = parseFloat(e.target.value);\r\n    setVolume(vol);\r\n    videoRef.current.volume = vol;\r\n    setIsMuted(vol === 0);\r\n  };\r\n\r\n  // Mute toggle\r\n  const toggleMute = () => {\r\n    const video = videoRef.current;\r\n\r\n  if (video.muted || volume === 0) {\r\n    // Unmute\r\n    setVolume(lastVolume);\r\n    video.volume = lastVolume;\r\n    video.muted = false;\r\n    setIsMuted(false);\r\n  } else {\r\n    // Mute\r\n    setLastVolume(volume);\r\n    setVolume(0);\r\n    video.volume = 0;\r\n    video.muted = true;\r\n    setIsMuted(true);\r\n  }\r\n  };\r\n\r\n  // Quality change\r\n  const handleQualityChange = async(e) => {\r\n    const newQuality = e.target.value;\r\n    const video = videoRef.current;\r\n    const wasPaused = video.paused;\r\n    const current = video.currentTime;\r\n\r\n    const goingLower = parseInt(newQuality) < parseInt(prevQuality);\r\n  setIsTransitioning(true);\r\n  setPrevQuality(newQuality);\r\n  setQuality(newQuality);\r\n  setIsPlaying(false);\r\n\r\n   if (goingLower) {\r\n    video.classList.add(\"blurred\");\r\n  } else {\r\n    video.classList.remove(\"blurred\");\r\n  }\r\n\r\n\r\n    setQuality(newQuality);\r\n     setIsPlaying(false);\r\n    video.src = `/videos/SampleVideo-${newQuality}p.mp4`;\r\n    video.load();\r\n    video.currentTime = current;\r\n   try {\r\n    if (!wasPaused) {\r\n      await video.play();\r\n      setIsPlaying(true)\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Autoplay failed after quality switch:\", error);\r\n  }\r\n\r\n  setTimeout(() => {\r\n    video.classList.remove(\"blurred\"); // Remove blur after 1s\r\n    setIsTransitioning(false);\r\n  }, 1000);\r\n  };\r\n\r\n  // Seek bar change\r\n  const handleSeek = (e) => {\r\n    const time = parseFloat(e.target.value);\r\n    videoRef.current.currentTime = time;\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  // Fullscreen\r\n  const handleFullscreen = () => {\r\n    const video = videoRef.current;\r\n    if (video.requestFullscreen) {\r\n      video.requestFullscreen();\r\n    } else if (video.webkitRequestFullscreen) {\r\n      video.webkitRequestFullscreen();\r\n    } else if (video.msRequestFullscreen) {\r\n      video.msRequestFullscreen();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const updateTime = () => {\r\n      setCurrentTime(video.currentTime);\r\n    };\r\n\r\n    const setVideoData = () => {\r\n      setDuration(video.duration);\r\n      setCurrentTime(video.currentTime);\r\n    };\r\n\r\n    const onPlay = () => setIsPlaying(true);\r\n    const onPause = () => setIsPlaying(false);\r\n\r\n    video.addEventListener(\"loadedmetadata\", setVideoData);\r\n    video.addEventListener(\"timeupdate\", updateTime);\r\n    video.addEventListener(\"play\", onPlay);\r\n    video.addEventListener(\"pause\", onPause);\r\n\r\n    return () => {\r\n      video.removeEventListener(\"loadedmetadata\", setVideoData);\r\n      video.removeEventListener(\"timeupdate\", updateTime);\r\n      video.removeEventListener(\"play\", onPlay);\r\n      video.removeEventListener(\"pause\", onPause);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  const seekBar = document.querySelector('.seek-bar-container input[type=\"range\"]');\r\n  const percentage = (currentTime / duration) * 100;\r\n  if (seekBar) {\r\n    seekBar.style.setProperty('--seek-before-width', `${percentage}%`);\r\n  }\r\n}, [currentTime, duration]);\r\n\r\n\r\nuseEffect(() => {\r\n  const volumeSlider = document.querySelector('.volume-slider');\r\n  if (volumeSlider) {\r\n    const percent = volume * 100;\r\n    volumeSlider.style.background = `linear-gradient(to right, #2196F3 ${percent}%, #ccc ${percent}%)`;\r\n  }\r\n}, [volume]);\r\n\r\n  return (\r\n  <div className=\"yt-player-container\">\r\n    <video\r\n      ref={videoRef}\r\n      className=\"yt-video\"\r\n      src={`/videos/SampleVideo-${quality}p.mp4`}\r\n      onClick={togglePlay}\r\n    ></video>\r\n\r\n    <div className=\"yt-controls\">\r\n      {/* Seek Bar - full width */}\r\n      <div className=\"seek-bar-container\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max={duration}\r\n          step=\"0.1\"\r\n          value={currentTime}\r\n          onChange={handleSeek}\r\n        />\r\n      </div>\r\n\r\n      {/* Control Row */}\r\n      <div className=\"control-row\">\r\n        <button onClick={togglePlay}>{isPlaying ? \"‚ùö‚ùö\" : \"‚ñ∂\"}</button>\r\n\r\n        <span className=\"time-display\">\r\n          {formatTime(currentTime)} / {formatTime(duration)}\r\n        </span>\r\n\r\n        <button onClick={toggleMute}>{isMuted ? \"üîá\" : \"üîä\"}</button>\r\n\r\n        <input\r\n          type=\"range\"\r\n          className=\"volume-slider\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={volume}\r\n          onChange={handleVolumeChange}\r\n        />\r\n\r\n        <select value={quality} onChange={handleQualityChange}>\r\n          <option value=\"320\">320p</option>\r\n          <option value=\"480\">480p</option>\r\n          <option value=\"720\">720p</option>\r\n          <option value=\"1080\">1080p</option>\r\n        </select>\r\n\r\n        <button onClick={handleFullscreen}>‚õ∂</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default VideoPlayer2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAIC,OAAO,IAAK;EAC9B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;EACrC,MAAMI,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;EACrC,OAAO,GAAGC,IAAI,IAAIG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;AACjD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;;EAG/C;EACA,MAAM2B,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,KAAK,GAAGhB,QAAQ,CAACiB,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACE,MAAM,EAAE;MAChBF,KAAK,CAACG,IAAI,CAAC,CAAC;IACd,CAAC,MAAM;MACLH,KAAK,CAACI,KAAK,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,GAAG,GAAGC,UAAU,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACtCtB,SAAS,CAACmB,GAAG,CAAC;IACdvB,QAAQ,CAACiB,OAAO,CAACd,MAAM,GAAGoB,GAAG;IAC7BX,UAAU,CAACW,GAAG,KAAK,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMX,KAAK,GAAGhB,QAAQ,CAACiB,OAAO;IAEhC,IAAID,KAAK,CAACY,KAAK,IAAIzB,MAAM,KAAK,CAAC,EAAE;MAC/B;MACAC,SAAS,CAACS,UAAU,CAAC;MACrBG,KAAK,CAACb,MAAM,GAAGU,UAAU;MACzBG,KAAK,CAACY,KAAK,GAAG,KAAK;MACnBhB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACL;MACAE,aAAa,CAACX,MAAM,CAAC;MACrBC,SAAS,CAAC,CAAC,CAAC;MACZY,KAAK,CAACb,MAAM,GAAG,CAAC;MAChBa,KAAK,CAACY,KAAK,GAAG,IAAI;MAClBhB,UAAU,CAAC,IAAI,CAAC;IAClB;EACA,CAAC;;EAED;EACA,MAAMiB,mBAAmB,GAAG,MAAMP,CAAC,IAAK;IACtC,MAAMQ,UAAU,GAAGR,CAAC,CAACG,MAAM,CAACC,KAAK;IACjC,MAAMV,KAAK,GAAGhB,QAAQ,CAACiB,OAAO;IAC9B,MAAMc,SAAS,GAAGf,KAAK,CAACE,MAAM;IAC9B,MAAMD,OAAO,GAAGD,KAAK,CAACT,WAAW;IAEjC,MAAMyB,UAAU,GAAGC,QAAQ,CAACH,UAAU,CAAC,GAAGG,QAAQ,CAACC,WAAW,CAAC;IACjEC,kBAAkB,CAAC,IAAI,CAAC;IACxBC,cAAc,CAACN,UAAU,CAAC;IAC1BxB,UAAU,CAACwB,UAAU,CAAC;IACtB5B,YAAY,CAAC,KAAK,CAAC;IAElB,IAAI8B,UAAU,EAAE;MACfhB,KAAK,CAACqB,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IAChC,CAAC,MAAM;MACLtB,KAAK,CAACqB,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;IACnC;IAGEjC,UAAU,CAACwB,UAAU,CAAC;IACrB5B,YAAY,CAAC,KAAK,CAAC;IACpBc,KAAK,CAACwB,GAAG,GAAG,uBAAuBV,UAAU,OAAO;IACpDd,KAAK,CAACyB,IAAI,CAAC,CAAC;IACZzB,KAAK,CAACT,WAAW,GAAGU,OAAO;IAC5B,IAAI;MACH,IAAI,CAACc,SAAS,EAAE;QACd,MAAMf,KAAK,CAACG,IAAI,CAAC,CAAC;QAClBjB,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;IAEAE,UAAU,CAAC,MAAM;MACf5B,KAAK,CAACqB,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;MACnCJ,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;EACR,CAAC;;EAED;EACA,MAAMU,UAAU,GAAIvB,CAAC,IAAK;IACxB,MAAMwB,IAAI,GAAGtB,UAAU,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACvC1B,QAAQ,CAACiB,OAAO,CAACV,WAAW,GAAGuC,IAAI;IACnCtC,cAAc,CAACsC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAM/B,KAAK,GAAGhB,QAAQ,CAACiB,OAAO;IAC9B,IAAID,KAAK,CAACgC,iBAAiB,EAAE;MAC3BhC,KAAK,CAACgC,iBAAiB,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAIhC,KAAK,CAACiC,uBAAuB,EAAE;MACxCjC,KAAK,CAACiC,uBAAuB,CAAC,CAAC;IACjC,CAAC,MAAM,IAAIjC,KAAK,CAACkC,mBAAmB,EAAE;MACpClC,KAAK,CAACkC,mBAAmB,CAAC,CAAC;IAC7B;EACF,CAAC;EAED7D,SAAS,CAAC,MAAM;IACd,MAAM2B,KAAK,GAAGhB,QAAQ,CAACiB,OAAO;IAE9B,MAAMkC,UAAU,GAAGA,CAAA,KAAM;MACvB3C,cAAc,CAACQ,KAAK,CAACT,WAAW,CAAC;IACnC,CAAC;IAED,MAAM6C,YAAY,GAAGA,CAAA,KAAM;MACzB1C,WAAW,CAACM,KAAK,CAACP,QAAQ,CAAC;MAC3BD,cAAc,CAACQ,KAAK,CAACT,WAAW,CAAC;IACnC,CAAC;IAED,MAAM8C,MAAM,GAAGA,CAAA,KAAMnD,YAAY,CAAC,IAAI,CAAC;IACvC,MAAMoD,OAAO,GAAGA,CAAA,KAAMpD,YAAY,CAAC,KAAK,CAAC;IAEzCc,KAAK,CAACuC,gBAAgB,CAAC,gBAAgB,EAAEH,YAAY,CAAC;IACtDpC,KAAK,CAACuC,gBAAgB,CAAC,YAAY,EAAEJ,UAAU,CAAC;IAChDnC,KAAK,CAACuC,gBAAgB,CAAC,MAAM,EAAEF,MAAM,CAAC;IACtCrC,KAAK,CAACuC,gBAAgB,CAAC,OAAO,EAAED,OAAO,CAAC;IAExC,OAAO,MAAM;MACXtC,KAAK,CAACwC,mBAAmB,CAAC,gBAAgB,EAAEJ,YAAY,CAAC;MACzDpC,KAAK,CAACwC,mBAAmB,CAAC,YAAY,EAAEL,UAAU,CAAC;MACnDnC,KAAK,CAACwC,mBAAmB,CAAC,MAAM,EAAEH,MAAM,CAAC;MACzCrC,KAAK,CAACwC,mBAAmB,CAAC,OAAO,EAAEF,OAAO,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENjE,SAAS,CAAC,MAAM;IAChB,MAAMoE,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,yCAAyC,CAAC;IACjF,MAAMC,UAAU,GAAIrD,WAAW,GAAGE,QAAQ,GAAI,GAAG;IACjD,IAAIgD,OAAO,EAAE;MACXA,OAAO,CAACI,KAAK,CAACC,WAAW,CAAC,qBAAqB,EAAE,GAAGF,UAAU,GAAG,CAAC;IACpE;EACF,CAAC,EAAE,CAACrD,WAAW,EAAEE,QAAQ,CAAC,CAAC;EAG3BpB,SAAS,CAAC,MAAM;IACd,MAAM0E,YAAY,GAAGL,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;IAC7D,IAAII,YAAY,EAAE;MAChB,MAAMC,OAAO,GAAG7D,MAAM,GAAG,GAAG;MAC5B4D,YAAY,CAACF,KAAK,CAACI,UAAU,GAAG,qCAAqCD,OAAO,WAAWA,OAAO,IAAI;IACpG;EACF,CAAC,EAAE,CAAC7D,MAAM,CAAC,CAAC;EAEV,oBACAZ,OAAA;IAAK2E,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC5E,OAAA;MACE6E,GAAG,EAAEpE,QAAS;MACdkE,SAAS,EAAC,UAAU;MACpB1B,GAAG,EAAE,uBAAuBnC,OAAO,OAAQ;MAC3CgE,OAAO,EAAEtD;IAAW;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAETlF,OAAA;MAAK2E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAE1B5E,OAAA;QAAK2E,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjC5E,OAAA;UACEmF,IAAI,EAAC,OAAO;UACZC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAEnE,QAAS;UACdoE,IAAI,EAAC,KAAK;UACVnD,KAAK,EAAEnB,WAAY;UACnBuE,QAAQ,EAAEjC;QAAW;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNlF,OAAA;QAAK2E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B5E,OAAA;UAAQ8E,OAAO,EAAEtD,UAAW;UAAAoD,QAAA,EAAElE,SAAS,GAAG,IAAI,GAAG;QAAG;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAE9DlF,OAAA;UAAM2E,SAAS,EAAC,cAAc;UAAAC,QAAA,GAC3B3E,UAAU,CAACe,WAAW,CAAC,EAAC,KAAG,EAACf,UAAU,CAACiB,QAAQ,CAAC;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eAEPlF,OAAA;UAAQ8E,OAAO,EAAE1C,UAAW;UAAAwC,QAAA,EAAExD,OAAO,GAAG,IAAI,GAAG;QAAI;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAE7DlF,OAAA;UACEmF,IAAI,EAAC,OAAO;UACZR,SAAS,EAAC,eAAe;UACzBS,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,GAAG;UACPC,IAAI,EAAC,MAAM;UACXnD,KAAK,EAAEvB,MAAO;UACd2E,QAAQ,EAAEzD;QAAmB;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAEFlF,OAAA;UAAQmC,KAAK,EAAErB,OAAQ;UAACyE,QAAQ,EAAEjD,mBAAoB;UAAAsC,QAAA,gBACpD5E,OAAA;YAAQmC,KAAK,EAAC,KAAK;YAAAyC,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjClF,OAAA;YAAQmC,KAAK,EAAC,KAAK;YAAAyC,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjClF,OAAA;YAAQmC,KAAK,EAAC,KAAK;YAAAyC,QAAA,EAAC;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjClF,OAAA;YAAQmC,KAAK,EAAC,MAAM;YAAAyC,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eAETlF,OAAA;UAAQ8E,OAAO,EAAEtB,gBAAiB;UAAAoB,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAIR,CAAC;AAAC1E,EAAA,CAlNID,YAAY;AAAAiF,EAAA,GAAZjF,YAAY;AAoNlB,eAAeA,YAAY;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}